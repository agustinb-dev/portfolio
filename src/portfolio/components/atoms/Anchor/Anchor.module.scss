@use "../../../styles/functions.scss";
@use "../../../styles/constants.scss";
@use "../../../styles/mixins.scss";
@use "sass:map";

$xxl: map.get(constants.$grid-breakpoints, xxl);
$xl: map.get(constants.$grid-breakpoints, xl);
$lg: map.get(constants.$grid-breakpoints, lg);
$md: map.get(constants.$grid-breakpoints, md);
$sm: map.get(constants.$grid-breakpoints, sm);
$xs: map.get(constants.$grid-breakpoints, xs);
$xxs: map.get(constants.$grid-breakpoints, xxs);

.anchor-normal {
  text-decoration: none;
  color: constants.$text-dark-theme-color;
  transition: 0.2s ease-in-out;
  cursor: pointer;
  padding: 0;
  margin: 0;

  &:visited {
    color: constants.$text-dark-theme-color;
  }

  &:hover {
      color: constants.$main-color;
  }

  &:focus-visible {
    color: constants.$main-color;
  }
}

.anchor-button {
  background-color: constants.$main-color;
  color: constants.$text-light-dark-theme-color;
  border-radius: constants.$radius;
  text-align: center;

  @include mixins.box-shadow;

  &.thin {
    padding: functions.spacing(1) functions.spacing(1.5);
  }

  &.small {
    padding: functions.spacing(1.5) functions.spacing(1.8);
  }

  &.normal {
    padding: functions.spacing(1.5) functions.spacing(1.6);
  }

  &.large {
    padding: functions.spacing(2.25) functions.spacing(1.75);
  }

  &:hover {
    color: inherit;
    transform: translateY(-5px);

    @include mixins.box-shadow-hover;
  }

  &:focus-visible {
    color: inherit;
  }
}

.anchor-icon-button {
  padding: 0;
  color: constants.$main-color;

  &:visited {
    color: constants.$main-color;
  }
}